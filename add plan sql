
WITH USER_PLAN AS (
SELECT        t.COLUMN1 AS USER_ID
             ,t.COLUMN2 AS PLAN
             ,t.COLUMN3 AS ATTRIBUTE
 
 FROM  
 VALUES     ('Georgia','PLANXX',2),	
            ('Georgia','PLAN342',12),
            ('Georgia','PLAN213',12),
            ('Georgia','PLAN1',2),
            ('Georgia','PLANX5',21),
            ('Georgia','PLAN009',2),
            ('David','PLANXX8',12),
            ('David','PLAN22',2), 
            ('David','PLAN78',6),
            ('David',NULL,NULL)
                  t)


SELECT DISTINCT 
		 t.USER_ID
		,t.PLAN			AS PLAN1
		,t.ATTRIBUTE	AS PLAN_ATTRIBUTE1
		,p.PLAN         AS PLAN2
		,p.ATTRIBUTE	AS PLAN_ATTRIBUE2
		,k.PLAN         AS PLAN3
		,k.ATTRIBUTE	AS PLAN_ATTRIBUTE3
		,CASE WHEN t.ATTRIBUTE IS NOT NULL AND p.ATTRIBUTE IS NOT NULL AND k.ATTRIBUTE IS NOT NULL THEN AVG((t.ATTRIBUTE + p.ATTRIBUTE + k.ATTRIBUTE)/3)OVER(PARTITION BY t.USER_ID)
            WHEN t.ATTRIBUTE IS NOT NULL AND p.ATTRIBUTE IS NOT NULL AND k.ATTRIBUTE IS NULL THEN AVG((t.ATTRIBUTE + p.ATTRIBUTE)/2)OVER(PARTITION BY t.USER_ID)
            WHEN t.ATTRIBUTE IS  NULL AND p.ATTRIBUTE IS NOT NULL AND k.ATTRIBUTE IS NOT NULL THEN AVG((k.ATTRIBUTE + p.ATTRIBUTE)/2)OVER(PARTITION BY t.USER_ID)
            WHEN t.ATTRIBUTE IS NOT NULL AND p.ATTRIBUTE IS NULL AND k.ATTRIBUTE IS NOT NULL THEN AVG((t.ATTRIBUTE + k.ATTRIBUTE)/2)OVER(PARTITION BY t.USER_ID) 
            END AS METRIC

FROM
		USER_PLAN t 
LEFT JOIN
	(SELECT  USER_ID
			,PLAN
			,ATTRIBUTE	
	FROM 
		USER_PLAN
	) p ON p.USER_ID = t.USER_ID
LEFT JOIN
	(SELECT  USER_ID
			,PLAN
			,ATTRIBUTE	
	FROM 
		USER_PLAN	
	) k ON k.USER_ID = t.USER_ID
WHERE t.USER_ID = 'David'
AND (t.ATTRIBUTE IS NOT NULL OR p.ATTRIBUTE IS NOT NULL OR k.ATTRIBUTE IS NOT NULL)
;
